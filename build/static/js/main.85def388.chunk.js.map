{"version":3,"sources":["components/notificationError/NotificationError.js","redux/phoneBook/actions.js","components/contactForm/ContactForm.js","components/helpers/checkContact.js","components/contactList/contactItem/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/selectors.js","redux/phoneBook/operations.js","components/App.js","redux/phoneBook/reducers.js","redux/store.js","index.js"],"names":["NotificationError","content","className","getContactRequest","createAction","getContactSuccess","getContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContactsAction","error","ContactForm","getContacts","contacts","useSelector","state","dispatch","useDispatch","useState","flag","setFlag","newContact","handleChange","target","name","value","CSSTransition","in","classNames","timeout","onEntered","unmountOnExit","onSubmit","ev","preventDefault","reset","contact","undefined","number","items","map","el","checkContact","type","placeholder","onChange","ContactItem","id","delItem","onClick","ContactList","filteredItems","getIdForDelete","TransitionGroup","component","key","Filter","getNamesByFilter","StateAllContacts","StateFilter","filter","getFilteredContacts","createSelector","toLowerCase","includes","axios","defaults","baseURL","App","useEffect","a","get","data","appear","text","uuidv4","post","length","delete","deleteContactOperation","phoneBookReducer","createReducer","payload","loading","errors","_","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"2UAEO,SAASA,EAAT,GAAyC,IAAZC,EAAW,EAAXA,QAClC,OACE,oCACE,yBAAKC,UAAU,gBACb,4BAAKD,K,WCJAE,EAAoBC,YAAa,+BACjCC,EAAoBD,YAAa,+BACjCE,EAAkBF,YAAa,6BAE/BG,EAAoBH,YAAa,+BACjCI,EAAoBJ,YAAa,+BACjCK,EAAkBL,YAAa,6BAE/BM,EAAuBN,YAClC,kCAEWO,EAAuBP,YAClC,kCAEWQ,EAAqBR,YAAa,gCAElCS,EAAuBT,YAAa,6BACpCU,EAAQV,YAAa,wBCiDnBW,EA7DK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACbC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAA1CA,SACFG,EAAWC,cAFsB,EAGfC,oBAAS,GAHM,mBAGhCC,EAHgC,KAG1BC,EAH0B,KAKjCC,EAAa,GAWbC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtCJ,EAAWG,GAAQC,GAGrB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,GAAIR,EACJS,WAAW,OACXC,QAAS,IACTC,UAAW,kBAAMV,GAAQ,IACzBW,eAAa,GAEb,kBAACnC,EAAD,CAAmBC,QAAQ,kFAG7B,0BAAMmC,SAzBW,SAACC,GACpBA,EAAGC,iBACUD,EAAGV,OACXY,QCfmB,SAACC,EAASvB,EAAUG,GAC9C,IAAIG,GAAO,EAEX,YAAqBkB,IAAjBD,EAAQZ,WAAyCa,IAAnBD,EAAQE,QACxCtB,EAASN,EAAM,+BACR,IAEPG,EAAS0B,MAAMC,KAAI,SAACC,GAAD,OACjBA,EAAGjB,OAASY,EAAQZ,KAAQL,GAAO,EAAS,QAE1CA,IAGFH,EAASN,EAAM,iCACR,IDGIgC,CAAarB,EAAYR,EAAUG,GACzCJ,EAAYS,GAAcD,GAAQ,KAoBrC,2BAAOtB,UAAU,QAAjB,OAEE,2BACEA,UAAU,QACV6C,KAAK,OACLC,YAAY,aACZpB,KAAK,OACLqB,SAAUvB,KAGd,2BAAOxB,UAAU,QAAjB,SAEE,2BACEA,UAAU,QACV6C,KAAK,OACLC,YAAY,eACZpB,KAAK,SACLqB,SAAUvB,KAGd,4BAAQxB,UAAU,MAAM6C,KAAK,UAA7B,kB,QE9COG,EAZK,SAAC,GAAiC,IAAhCtB,EAA+B,EAA/BA,KAAMc,EAAyB,EAAzBA,OAAQS,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,QAItC,OACE,wBAAIlD,UAAU,cACZ,uBAAGA,UAAU,QAAQ0B,EAArB,KAA6Bc,GAC7B,4BAAQxC,UAAU,MAAMmD,QANX,WACjBD,EAAQD,KAKJ,YCkBSG,G,MAtBK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eAC9BJ,EAAU,SAACD,GACfK,EAAeL,IAGjB,OACE,oCACE,kBAACM,EAAA,EAAD,CAAiBC,UAAU,KAAKxD,UAAU,eACvCqD,EAAcX,KAAI,gBAAGhB,EAAH,EAAGA,KAAMc,EAAT,EAASA,OAAQS,EAAjB,EAAiBA,GAAjB,OACjB,kBAACrB,EAAA,EAAD,CAAe6B,IAAKR,EAAIlB,QAAS,IAAKD,WAAW,eAC/C,kBAAC,EAAD,CACEmB,GAAIA,EACJvB,KAAMA,EACNc,OAAQA,EACRU,QAASA,YCHRQ,EAdA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAChB,OACE,oCACE,wBAAI3D,UAAU,SAAd,yBACA,2BACEA,UAAU,QACV+C,SAAUY,EACVd,KAAK,OACLnB,KAAK,SACLoB,YAAY,iB,OCTPc,EAAmB,SAAC3C,GAAD,OAAWA,EAAMF,SAASA,SAAS0B,OAEtDoB,EAAc,SAAC5C,GAAD,OAAWA,EAAMF,SAASA,SAAS+C,QAEjDC,EAAsBC,YACjC,CAACH,EAAaD,IACd,SAACE,EAAQrB,GACP,OAAOA,EAAMqB,QAAO,SAACnB,GAAD,OAClBA,EAAGjB,KAAKuC,cAAcC,SAASJ,EAAOG,qB,yDCI5CE,IAAMC,SAASC,QAAU,wBCMV,SAASC,IACtB,IAAMrD,EAAQD,aAAY,SAACC,GAAD,OAAWA,KAC/BC,EAAWC,cAEjBoD,qBAAU,WACRrD,EDiBgC,uCAAM,WAAOA,GAAP,iBAAAsD,EAAA,6DACxCtD,EAASjB,KAD+B,kBAIfkE,IAAMM,IAAN,aAJe,gBAI9BC,EAJ8B,EAI9BA,KACRxD,EAASf,EAAkBuE,IALW,gDAOtCxD,EAASd,EAAgB,EAAD,KAPc,yDAAN,yDChB/B,IAcH,OACE,oCACE,yBAAKJ,UAAU,WACb,kBAAC4B,EAAA,EAAD,CACEC,IAAI,EACJ8C,QAAQ,EACR5C,QAAS,IACTD,WAAW,aACXG,eAAa,GAEb,wBAAIjC,UAAU,SAAd,cAEF,kBAAC,EAAD,CAAac,YAxBC,SAACS,GDZY,IAACqD,ECahC1D,GDbgC0D,ECaHrD,EDbE,uCAAU,WAAOL,GAAP,mBAAAsD,EAAA,6DACrClC,EADqC,aAEzCW,GAAI4B,eACDD,GAEL1D,EAASb,KALkC,kBAQlB8D,IAAMW,KAAK,YAAaxC,GARN,gBAQjCoC,EARiC,EAQjCA,KACRxD,EAASZ,EAAkBoE,IATc,kDAWzCxD,EAASX,EAAgB,EAAD,KAXiB,0DAAV,2DCqC3B,wBAAIP,UAAU,SAAd,YACC4D,EAAiB3C,GAAO8D,QAAU,GACjC,kBAAC,EAAD,CACEpB,iBAAkB,mBApBH,SAAChC,GACxBT,EAASP,EAAqBgB,IAoBpBgC,CADgB,EAAGlC,OAAUE,UAMnC,kBAAC,EAAD,CACE0B,cACEQ,EAAY5C,IAAU2C,EAAiB3C,GAAO8D,QAAU,EACpDhB,EAAoB9C,GACpB2C,EAAiB3C,GAEvBqC,eApCc,SAACL,GACrB/B,EDFkC,SAAC+B,GAAD,8CAAQ,WAAO/B,GAAP,SAAAsD,EAAA,6DAC5CtD,EAASV,KADmC,kBAIpC2D,IAAMa,OAAN,oBAA0B/B,IAJU,OAK1C/B,EAAST,EAAqBwC,IALY,gDAO1C/B,EAASR,EAAmB,EAAD,KAPe,yDAAR,sDCEzBuE,CAAuBhC,S,yDCXvBiC,EAAmBC,YAAc,eAPzB,CACnBpE,SAAU,CACR0B,MAAO,GACPqB,OAAQ,OAIiC,mBAGxC3D,GAAoB,SAACc,EAAD,OAAUmE,EAAV,EAAUA,QAAV,MAAyB,CAC5CrE,SAAS,2BACJE,EAAMF,UADH,IAEN0B,MAAO2C,QAN8B,cASxC9E,GAAoB,SAACW,EAAD,OAAUmE,EAAV,EAAUA,QAAV,MAAyB,CAC5CrE,SAAS,2BACJE,EAAMF,UADH,IAEN0B,MAAM,CAAE2C,GAAH,mBAAenE,EAAMF,SAAS0B,cAZE,cAexChC,GAAuB,SAACQ,EAAD,OAAUmE,EAAV,EAAUA,QAAV,MAAyB,CAC/CrE,SAAS,2BACJE,EAAMF,UADH,IAEN0B,MAAM,YACDxB,EAAMF,SAAS0B,MAAMqB,QAAO,YAC7B,OADyC,EAATb,KAClBmC,YApBmB,cAyBxCzE,GAAuB,SAACM,EAAD,OAAUmE,EAAV,EAAUA,QAAV,MAAyB,CAC/CrE,SAAU,CACR0B,MAAM,YAAKxB,EAAMF,SAAS0B,OAC1BqB,OAAQsB,OA5B6B,IAkChCC,EAAUF,aAAc,GAAD,mBACjC9E,GAAoB,kBAAM,KADO,cAEjCC,GAAoB,kBAAM,KAFO,cAGjCC,GAAkB,kBAAM,KAHS,cAIjCC,GAAuB,kBAAM,KAJI,cAKjCC,GAAuB,kBAAM,KALI,cAMjCC,GAAqB,kBAAM,KANM,cAOjCT,GAAoB,kBAAM,KAPO,cAQjCE,GAAoB,kBAAM,KARO,cASjCC,GAAkB,kBAAM,KATS,IAYvBkF,EAASH,YAAc,IAAD,mBAChCvE,GAAQ,SAAC2E,EAAD,YAAMH,WADkB,cAEhC9E,GAAoB,SAACiF,GAAD,MAAO,MAFK,cAGhC9E,GAAuB,SAAC8E,GAAD,MAAO,MAHE,cAIhC5E,GAAuB,SAAC4E,GAAD,MAAO,MAJE,ICvD7BC,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAcC,YAAgB,CAClCrF,SAAUmE,EACVI,OAAQA,EACRD,YASagB,GANDC,YAAe,CAC3BC,QAASJ,EACTX,aACAgB,UAAUC,I,MCxBZC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC/B,EAAD,OAEFsC,SAASC,eAAe,W","file":"static/js/main.85def388.chunk.js","sourcesContent":["import React from \"react\";\nimport '../contactForm/ContactForm.css'\nexport function NotificationError({ content }) {\n  return (\n    <>\n      <div className='notification'>\n        <h3>{content}</h3>\n      </div>\n    </>\n  );\n}\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const getContactRequest = createAction(\"phonebook/getContactRequest\");\nexport const getContactSuccess = createAction(\"phonebook/getContactSuccess\");\nexport const getContactError = createAction(\"phonebook/getContactError\");\n\nexport const addContactRequest = createAction(\"phonebook/addContactRequest\");\nexport const addContactSuccess = createAction(\"phonebook/addContactSuccess\");\nexport const addContactError = createAction(\"phonebook/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"phonebook/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"phonebook/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"phonebook/deleteContactError\");\n\nexport const filterContactsAction = createAction(\"phonebook/FILTER_CONTACTS\");\nexport const error = createAction(\"errors/ERROR_MESSAGE\");\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { NotificationError } from \"../notificationError/NotificationError\";\nimport { checkContact } from \"../helpers/checkContact\";\nimport \"./ContactForm.css\";\n\nconst ContactForm = ({ getContacts }) => {\n  const { contacts } = useSelector((state) => state.contacts);\n  const dispatch = useDispatch();\n  const [flag, setFlag] = useState(false);\n\n  const newContact = {};\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n    const form = ev.target;\n    form.reset();\n\n    const flag = checkContact(newContact, contacts, dispatch);\n    flag ? getContacts(newContact) : setFlag(true);\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    newContact[name] = value;\n  };\n\n  return (\n    <>\n      <CSSTransition\n        in={flag}\n        classNames=\"noti\"\n        timeout={750}\n        onEntered={() => setFlag(false)}\n        unmountOnExit\n      >\n        <NotificationError content=\"You have not completed all the fields or the values ​​are repeated\" />\n      </CSSTransition>\n\n      <form onSubmit={handleSubmit}>\n        <label className=\"text\">\n          Name\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"text\">\n          Number\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Enter number\"\n            name=\"number\"\n            onChange={handleChange}\n          />\n        </label>\n        <button className=\"btn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { error } from \"../../redux/phoneBook/actions\";\n\nexport const checkContact = (contact, contacts, dispatch) => {\n  let flag = true;\n\n  if (contact.name === undefined || contact.number === undefined) {\n    dispatch(error(\"not all fields are filled\"));\n    return false;\n  } else {\n    contacts.items.map((el) =>\n      el.name === contact.name ? (flag = false) : \"\"\n    );\n    if (flag) {\n      return true;\n    } else {\n      dispatch(error(\"such contact already exists\"));\n      return false;\n    }\n  }\n};\n","import React from 'react';\n\nconst ContactItem = ({name, number, id, delItem}) => {\n const deleteItem =()=>{\n  delItem(id);\n }\n  return(\n    <li className='list__item'>\n      <p className='text'>{name}: {number}</p>\n      <button className='btn' onClick={deleteItem}>delete</button>\n    </li>\n  )\n}\n\nexport default ContactItem;","import React from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport ContactItem from \"./contactItem/ContactItem\";\nimport \"./ContactList.css\";\n\nconst ContactList = ({ filteredItems, getIdForDelete }) => {\n  const delItem = (id) => {\n    getIdForDelete(id);\n  };\n\n  return (\n    <>\n      <TransitionGroup component=\"ul\" className=\"ContactList\">\n        {filteredItems.map(({ name, number, id }) => (\n          <CSSTransition key={id} timeout={250} classNames=\"ContactItem\">\n            <ContactItem\n              id={id}\n              name={name}\n              number={number}\n              delItem={delItem}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n};\nexport default ContactList;\n","import React from \"react\";\n\nconst Filter = ({ getNamesByFilter }) => {\n  return (\n    <>\n      <h3 className=\"title\">Find contacts by name</h3>\n      <input\n        className=\"input\"\n        onChange={getNamesByFilter}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n      ></input>\n    </>\n  );\n};\nexport default Filter;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const StateAllContacts = (state) => state.contacts.contacts.items;\n\nexport const StateFilter = (state) => state.contacts.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  [StateFilter, StateAllContacts],\n  (filter, items) => {\n    return items.filter((el) =>\n      el.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactRequest,\n  getContactSuccess,\n  getContactError,\n} from \"./actions\";\n\naxios.defaults.baseURL = \"http://localhost:3000\";\n\nexport const newContactOperation = (text) => async (dispatch) => {\n  const contact = {\n    id: uuidv4(),\n    ...text,\n  };\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post(\"/contacts\", contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nexport const deleteContactOperation = (id) => async (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nexport const getContactsOperation = () => async (dispatch) => {\n  dispatch(getContactRequest());\n\n  try {\n    const { data } = await axios.get(`/contacts`);\n    dispatch(getContactSuccess(data));\n  } catch (error) {\n    dispatch(getContactError(error));\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\n\nimport Filter from \"./filter/Filter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterContactsAction } from \"../redux/phoneBook/actions\";\nimport {\n  StateAllContacts,\n  StateFilter,\n  getFilteredContacts,\n} from \"../components/selectors\";\n\nimport {\n  newContactOperation,\n  deleteContactOperation,\n  getContactsOperation,\n} from \"../redux/phoneBook/operations\";\n\nexport default function App() {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsOperation());\n  }, []);\n\n  const getContacts = (newContact) => {\n    dispatch(newContactOperation(newContact));\n  };\n\n  const deleteContact = (id) => {\n    dispatch(deleteContactOperation(id));\n  };\n\n  const getNamesByFilter = (value) => {\n    dispatch(filterContactsAction(value));\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"title-anim\"\n          unmountOnExit\n        >\n          <h1 className=\"title\">Phonebook</h1>\n        </CSSTransition>\n        <ContactForm getContacts={getContacts} />\n        <h2 className=\"title\">Contacts</h2>\n        {StateAllContacts(state).length >= 2 && (\n          <Filter\n            getNamesByFilter={({ target: { value } }) =>\n              getNamesByFilter(value)\n            }\n          />\n        )}\n\n        <ContactList\n          filteredItems={\n            StateFilter(state) && StateAllContacts(state).length >= 2\n              ? getFilteredContacts(state)\n              : StateAllContacts(state)\n          }\n          getIdForDelete={deleteContact}\n        />\n      </div>\n    </>\n  );\n}\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  filterContactsAction,\n  error,\n  addContactSuccess,\n  addContactRequest,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactRequest,\n  getContactSuccess,\n  getContactError,\n} from \"./actions\";\n\nconst initialState = {\n  contacts: {\n    items: [],\n    filter: \"\",\n  },\n};\n\nexport const phoneBookReducer = createReducer(\n  { ...initialState },\n  {\n    [getContactSuccess]: (state, { payload }) => ({\n      contacts: {\n        ...state.contacts,\n        items: payload,\n      },\n    }),\n    [addContactSuccess]: (state, { payload }) => ({\n      contacts: {\n        ...state.contacts,\n        items: [payload, ...state.contacts.items],\n      },\n    }),\n    [deleteContactSuccess]: (state, { payload }) => ({\n      contacts: {\n        ...state.contacts,\n        items: [\n          ...state.contacts.items.filter(({ id }) => {\n            return id !== payload;\n          }),\n        ],\n      },\n    }),\n    [filterContactsAction]: (state, { payload }) => ({\n      contacts: {\n        items: [...state.contacts.items],\n        filter: payload,\n      },\n    }),\n  }\n);\n\nexport const loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [getContactRequest]: () => true,\n  [getContactSuccess]: () => false,\n  [getContactError]: () => false,\n});\n\nexport const errors = createReducer(\"\", {\n  [error]: (_, { payload }) => payload,\n  [addContactSuccess]: (_) => \"\",\n  [deleteContactSuccess]: (_) => \"\",\n  [filterContactsAction]: (_) => \"\",\n});\n","import { combineReducers } from \"redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { phoneBookReducer, errors, loading } from \"./phoneBook/reducers\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst rootReducer = combineReducers({\n  contacts: phoneBookReducer,\n  errors: errors,\n  loading,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}